-- Schema dump (tables, views, indexes, triggers)
-- Generated by backup_schema.py

PRAGMA foreign_keys=OFF;
BEGIN;

-- Tables
CREATE TABLE IF NOT EXISTS flags(
    alpha2 TEXT PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS match(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    teamevent_id INTEGER NOT NULL,
    season_number INTEGER NOT NULL,
    start TEXT NOT NULL,
    opponent TEXT NOT NULL,
    score_ladys INTEGER DEFAULT 0,
    score_opponent INTEGER DEFAULT 0,
    FOREIGN KEY (teamevent_id) REFERENCES teamevent(id) ON DELETE CASCADE,
    FOREIGN KEY (season_number) REFERENCES season(number) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS matchscore(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    match_id INTEGER NOT NULL,
    player_id INTEGER NOT NULL,
    score INTEGER NOT NULL CHECK(score BETWEEN 0 AND 75000),
    points INTEGER NOT NULL DEFAULT 0 CHECK(points BETWEEN 0 AND 300),
    UNIQUE (match_id, player_id),
    FOREIGN KEY (match_id) REFERENCES match(id) ON DELETE CASCADE,
    FOREIGN KEY (player_id) REFERENCES players(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS players(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    alias TEXT,
    garage_power INTEGER DEFAULT 0,
    active BOOLEAN DEFAULT 1,
    created_at TEXT DEFAULT CURRENT_TIMESTAMP,
    birthday TEXT,
    team TEXT,
    discord_name TEXT,
    country_code TEXT,
    last_modified TEXT,
    away_from TEXT,
    away_until TEXT,
    active_modified TEXT,
    is_leader BOOLEAN DEFAULT 0
);

CREATE TABLE IF NOT EXISTS season(
    number INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    start TEXT NOT NULL,
    division TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS teamevent(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    iso_year INTEGER NOT NULL,
    iso_week INTEGER NOT NULL,
    tracks INTEGER DEFAULT 4,
    max_score_per_track INTEGER DEFAULT 15000,
    UNIQUE(iso_year, iso_week)
);

CREATE TABLE IF NOT EXISTS teamevent_vehicle(
    teamevent_id INTEGER NOT NULL,
    vehicle_id INTEGER NOT NULL,
    PRIMARY KEY (teamevent_id, vehicle_id),
    FOREIGN KEY (teamevent_id) REFERENCES teamevent(id) ON DELETE CASCADE,
    FOREIGN KEY (vehicle_id) REFERENCES vehicle(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS vehicle(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    shortname TEXT NOT NULL UNIQUE
);

-- Triggers
CREATE TRIGGER IF NOT EXISTS trg_players_active_modified
AFTER UPDATE OF active ON players
FOR EACH ROW
WHEN NEW.active IS NOT OLD.active
BEGIN
    UPDATE players
    SET active_modified = CURRENT_TIMESTAMP
    WHERE id = OLD.id;
END;

CREATE TRIGGER IF NOT EXISTS update_players_last_modified
AFTER UPDATE ON players
FOR EACH ROW
BEGIN
    UPDATE players
    SET last_modified = CURRENT_TIMESTAMP
    WHERE id = OLD.id;
END;

PRAGMA user_version = 0;

COMMIT;
